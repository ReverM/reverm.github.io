/*! @license pzpr.js v7f9addbe (c) 2009-2025 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */
!function(e,o){"object"==typeof module&&module.exports?module.exports=[e,o]:pzpr.classmgr.makeCustom(e,o)}(["squarejam"],{MouseEvent:{inputModes:{edit:["number","clear"],play:["border","subline"]},autoedit_func:"qnum",autoplay_func:"border"},KeyEvent:{enablemake:!0},Cell:{minnum:1,maxnum:function(){return Math.min(this.board.cols,this.board.rows)}},Board:{hasborder:1},AreaRoomGraph:{enabled:!0},Graphic:{gridcolor_type:"DLIGHT",bordercolor_func:"qans",paint:function(){this.drawBGCells(),this.drawDashedGrid(),this.drawQuesNumbers(),this.drawBorders(),this.drawBorderQsubs(),this.drawChassis(),this.drawTarget()}},Encode:{decodePzpr:function(e){this.decodeNumber16()},encodePzpr:function(e){this.encodeNumber16()}},FileIO:{decodeData:function(){this.decodeCellQnum(),this.decodeBorderAns()},encodeData:function(){this.encodeCellQnum(),this.encodeBorderAns()}},AnsCheck:{checklist:["checkBorderCross","checkRoomSquare","checkRoomSideLen","checkBorderDeadend+"],checkRoomSquare:function(){this.checkAllArea(this.board.roommgr,function(e,o,r,n){return e===o&&e*o===r},"bkNotSquare")},checkRoomSideLen:function(){for(var e=this.board.roommgr.components,o=0;o<e.length;o++){for(var r=e[o].clist,n=r.getRectSize(),t=r.filter(function(e){return 1<=e.qnum}),c=!1,d=0;d<t.length;d++)t[d].qnum===n.cols&&t[d].qnum===n.rows||(c=!0);if(c){if(this.failcode.add("bkSideNe"),this.checkOnly)break;r.seterr(1)}}}}});
//# sourceMappingURL=squarejam.js.map