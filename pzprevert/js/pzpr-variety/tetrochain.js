/*! @license pzpr.js v7f9addbe (c) 2009-2025 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */
!function(e,t){"object"==typeof module&&module.exports?module.exports=[e,t]:pzpr.classmgr.makeCustom(e,t)}(["tetrochain"],{MouseEvent:{use:!0,inputModes:{edit:["number","direc","clear","info-blk"],play:["shade","unshade","info-blk"]},mouseinput_auto:function(){this.puzzle.playmode?(this.mousestart||this.mousemove)&&this.inputcell():this.puzzle.editmode&&(this.mousestart||this.mousemove?this.inputdirec():this.mouseend&&this.notInputted()&&this.inputqnum())},dispInfoBlk:function(){var e=this.getcell();this.mousereset(),!e.isnull&&e.isShade()&&(e.blk8.clist.setinfo(1),this.board.hasinfo=!0,this.puzzle.redraw())}},KeyEvent:{enablemake:!0,moveTarget:function(e){return!e.match(/shift/)&&this.moveTCell(e)},keyinput:function(e){this.key_inputdirec(e)||this.key_inputqnum(e)}},Cell:{numberRemainsUnshaded:!0,minnum:0,maxnum:function(){return Math.max(this.board.cols,this.board.rows)-1},getClist:function(){if(!this.isValidNum()||0===this.qdir)return null;for(var e=this.getaddr(),t=this.qdir,i=new this.klass.CellList;;){e.movedir(t,2);var s=e.getc();if(s.isnull)break;i.add(s)}return i}},BoardExec:{adjustBoardData:function(e,t){this.adjustNumberArrow(e,t)}},AreaShadeGraph:{enabled:!0},"AreaShade8Graph:AreaShadeGraph":{enabled:!0,setComponentRefs:function(e,t){e.blk8=t},getObjNodeList:function(e){return e.blk8nodes},resetObjNodeList:function(e){e.blk8nodes=[]},getSideObjByNodeObj:function(e){for(var t=e.getdir8clist(),i=[],s=0;s<t.length;s++){var r=t[s][0];this.isnodevalid(r)&&i.push(r)}return i}},Board:{addExtraInfo:function(){this.sblk8mgr=this.addInfoList(this.klass.AreaShade8Graph)}},Graphic:{shadecolor:"#222222",enablebcolor:!0,bgcellcolor_func:"qsub1",paint:function(){this.drawBGCells(),this.drawShadedCells(),this.drawGrid(),this.drawArrowNumbers(),this.drawChassis(),this.drawTarget()}},Encode:{decodePzpr:function(e){this.decodeArrowNumber16()},encodePzpr:function(e){this.encodeArrowNumber16()}},FileIO:{decodeData:function(){this.decodeCellDirecQnum(),this.decodeCellAns()},encodeData:function(){this.encodeCellDirecQnum(),this.encodeCellAns()}},AnsCheck:{checklist:["checkOverShadeCell","checkAdjacentShapes","checkUnderShadeCell","checkArrowNumber","checkConnect8Shade","checkNumberHasArrow"],checkOverShadeCell:function(){this.checkAllArea(this.board.sblkmgr,function(e,t,i,s){return i<=4},"csGt4")},checkUnderShadeCell:function(){this.checkAllArea(this.board.sblkmgr,function(e,t,i,s){return 4<=i},"csLt4")},checkArrowNumber:function(){for(var e=this.board,t=0;t<e.cell.length;t++){var i=e.cell[t],s=i.getClist();if(s){var r=s.filter(function(e){return e.isShade()}).length;if(i.qnum!==r){if(this.failcode.add("anShadeNe"),this.checkOnly)break;i.seterr(1),s.seterr(1)}}}},checkConnect8Shade:function(){this.checkOneArea(this.board.sblk8mgr,"csDivide")},checkAdjacentShapes:function(){for(var e=this.board,t=0;t<e.cell.length;t++){var i=e.cell[t];if(i.bx!==e.maxbx-1&&i.by!==e.maxby-1){for(var s=i.adjacent,r=[[i,s.right.adjacent.bottom],[s.right,s.bottom]],n=0;n<2&&(!r[n][0].isShade()||!r[n][1].isShade());n++);if(2!==n){i=r[n][0].sblk,s=r[n][1].sblk;if(i!==s&&4===i.clist.length&&!this.isDifferentShapeBlock(i,s)){if(this.failcode.add("bsSameShape"),this.checkOnly)break;i.clist.seterr(1),s.clist.seterr(1)}}}}}}});
//# sourceMappingURL=tetrochain.js.map