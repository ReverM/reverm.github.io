/*! @license pzpr.js v7f9addbe (c) 2009-2025 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */
!function(t,i){"object"==typeof module&&module.exports?module.exports=[t,i]:pzpr.classmgr.makeCustom(t,i)}(["curvedata","curvedata-aux"],{"MouseEvent@curvedata":{inputModes:{edit:["copy-answer","move-clue","border","shade","undef","clear"],play:["line","peke"]},mouseinput_auto:function(){var i,t,s,e,n;this.puzzle.playmode?"left"===this.btn?this.mousestart||this.mousemove?this.inputLine():this.mouseend&&this.notInputted()&&this.inputpeke():"right"===this.btn&&(this.mousestart||this.mousemove)&&this.inputpeke():this.puzzle.editmode&&this.mousestart&&((i=this.getcell()).isnull||(this.setcursor(i),t=this.board.shapes[i.qnum],n=this.puzzle.board.cols,s=this.puzzle.board.rows,t&&0<t.w&&(n=Math.max(n,t.w),s=Math.max(s,t.bits.length/t.w)),s=[n=Math.max(n,s),n],t&&0<t.w&&(s.push(t.w),s.push(t.bits.length/t.w),s.push(t.encodeBits())),e=this,n={pid:"curvedata-aux",key:i.bx+","+i.by,url:s.join("/")},this.puzzle.emit("request-aux-editor",n,function(t){t=t.board.getShape();(t||0<=i.qnum)&&e.addOperation(i,t)})))},addOperation:function(t,i){i=new this.klass.CurveDataOperation(t,i);i.isvalid&&(i.redo(),this.puzzle.opemgr.add(i),t.draw())},inputShade:function(){return this.enterqnum(-3)},mouseinput_undef:function(){return this.enterqnum(-2)},mouseinput_clear:function(){return this.enterqnum(-1)},enterqnum:function(t){var i=this.getcell();!i.isnull&&i!==this.mouseCell&&this.puzzle.editmode&&(this.mouseCell=i,this.mousestart&&(this.inputData=i.qnum!==t?t:-1),-3===this.inputData&&["left","right","top","bottom"].forEach(function(t){i.adjborder[t].isnull||(i.adjborder[t].setQues(0),i.adjborder[t].removeLine())}),this.addOperation(i,this.inputData))},mouseinput_other:function(){"copy-answer"===this.inputMode&&this.mousestart&&this.mouseinput_copyAnswer(),"move-clue"===this.inputMode&&this.mouseinput_moveClue()},mouseinput_copyAnswer:function(){var t,i=this.getcell();!i.isnull&&this.puzzle.editmode&&i.path&&(t=i.path.clist.toCurveData(),this.addOperation(i,t))},mouseinput_moveClue:function(){var t,i=this.getcell();this.mousestart?this.mouseCell=-1!==i.qnum&&-3!==i.qnum?i:null:!this.mouseCell||i.isnull||this.mouseCell.equals(i)||-1!==i.qnum||(t=this.board.shapes[this.mouseCell.qnum]||this.mouseCell.qnum,this.addOperation(i,t),this.addOperation(this.mouseCell,-1),this.mouseCell=i)}},"MouseEvent@curvedata-aux":{inputModes:{edit:[],play:["line","slide"]},mouseinput_auto:function(){this.inputLine()},mouseinput_other:function(){"slide"===this.inputMode&&this.mouseinput_slide()},mouseinput_slide:function(){var t=this.getcell();this.mousestart?this.inputData=0<t.lcnt?t:null:this.inputData&&!t.isnull&&(this.inputData.bx<t.bx&&this.addSlideOperation("R",this.inputData)?this.inputData=this.inputData.adjacent.right:this.inputData.bx>t.bx&&this.addSlideOperation("L",this.inputData)?this.inputData=this.inputData.adjacent.left:this.inputData.by<t.by&&this.addSlideOperation("D",this.inputData)?this.inputData=this.inputData.adjacent.bottom:this.inputData.by>t.by&&this.addSlideOperation("U",this.inputData)&&(this.inputData=this.inputData.adjacent.top))},addSlideOperation:function(t,i){t=new this.klass.SlideOperation(t,i);return!!t.isvalid()&&(t.redo(),this.puzzle.opemgr.add(t),!0)}},Border:{enableLineNG:!0,isLineNG:function(){return 1===this.ques||-3===this.sidecell[0].qnum||-3===this.sidecell[1].qnum},prehook:{ques:function(t){return 0<t&&this.removeLine(),!1}}},Board:{hasborder:1,shapes:[],createExtraObject:function(){this.shapes=[]},compressShapes:function(){for(var t={},i=0;i<this.cell.length;i++)t[this.cell[i].qnum]=!0;t[-1]=-1,t[-2]=-2,t[-3]=-3;var s=0;for(i=0;i<this.shapes.length;i++)i in t&&(t[i]=s++);if(s!==i){for(i=0;i<this.cell.length;i++)this.cell[i].qnum=t[this.cell[i].qnum];for(i=0;i<this.shapes.length;i++)this.shapes[t[i]]=this.shapes[i];for(this.shapes=this.shapes.slice(0,s),i=0;i<this.linegraph.components.length;i++){var e=this.linegraph.components[i];e.isomorphicWith=null,this.linegraph.components.scanForClues(e)}}}},"Board@curvedata-aux":{setShape:function(t){for(var i=t.w,s=t.bits.length/i,e=this.cols-i|1,n=this.rows-s|1,r=0;r<s;r++)for(var o=0;o<i;o++){var h=this.getc(2*o+e,2*r+n);h&&!h.isnull&&(1&t.bits[r*i+o]&&!h.adjborder.right.isnull&&h.adjborder.right.setLine(1),2&t.bits[r*i+o]&&!h.adjborder.bottom.isnull&&h.adjborder.bottom.setLine(1))}},getShape:function(){var t=this.cell.filter(function(t){return 0<t.lcnt});return t&&0<t.length&&new this.klass.CellList(t).toCurveData()}},CurveData:{bits:[],w:0,positions:null,connections:null,nodecnt:0,serialized:null,initialize:function(){this.w=0,this.bits=[],this.invalidate()},init:function(t,i){var s=t*i;this.w=t,this.bits=Array(s);for(var e=0;e<s;e++)this.bits[e]=0;this.invalidate()},invalidate:function(){this.positions=null,this.connections=null,this.nodecnt=0,this.serialized=null},buildBits:function(){for(var t=this.bits.length,i=this.w,s=0;s<t;s++){this.bits[s]&=3;var e=Math.floor(s%i),n=Math.floor(s/i);0<e&&1&this.bits[n*i+e-1]&&(this.bits[s]|=4),0<n&&2&this.bits[(n-1)*i+e]&&(this.bits[s]|=8)}},build:function(){var t=this.bits.length,i=this.w,s=t/this.w;this.positions={},this.connections={},this.nodecnt=0,this.buildBits();for(var e=0;e<t;e++)0!==(u=this.bits[e])&&5!==u&&10!==u&&(this.connections[e]={left:[],right:[],top:[],bottom:[]},this.nodecnt++);for(var n=0;n<s;n++)for(var r=null,o=0;o<i;o++){e=n*i+o;null===r&&1&this.bits[e]?r=[e]:null!==r&&5!==this.bits[e]&&(r.push(e),1&this.bits[e]||(h=this.connections,r.forEach(function(t,i){h[t].left=r.slice(0,i),h[t].right=r.slice(i)}),r=null))}for(o=0;o<i;o++)for(r=null,n=0;n<s;n++){e=n*i+o;null===r&&2&this.bits[e]?r=[e]:null!==r&&10!==this.bits[e]&&(r.push(e),2&this.bits[e]||(h=this.connections,r.forEach(function(t,i){h[t].top=r.slice(0,i),h[t].bottom=r.slice(i)}),r=null))}for(e=0;e<t;e++){var h,a,u,l=this.bits[e];0!==l&&5!==l&&10!==l&&(h=this.connections[e],a=this.bits,(u=[l,"R",h.right.map(l=function(t){return a[t]}).join(","),"B",h.bottom.map(l).join(","),"L",h.left.map(l).join(","),"T",h.top.map(l).join(",")].join(""))in this.positions?this.positions[u].push(e):this.positions[u]=[e])}},deepEquals:function(t){return t&&this.w===t.w&&this.encodeBits()===t.encodeBits()},isIsomorphic:function(t){if(!t)return!1;if(this.positions||this.build(),t.positions||t.build(),this.nodecnt!==t.nodecnt)return!1;for(var i in this.positions)if(!(i in t.positions)||this.positions[i].length!==t.positions[i].length)return!1;var s=[],e={};for(i in this.positions){var n=this.positions[i],r=t.positions[i],o=n.length;if(1===o)e[n[0]]=r[0];else{for(var h=new Array(o),a=0;a<o;a++)h[a]=0,e[n[a]]=r[a];s.push({c:h,input:n,other:r,current:n.slice()})}}for(;;){if(this.isConnectionsEqual(t,e))return!0;for(var u=0,u=0;u<s.length;u++){for(var l=s[u],c=this.permute_next(l),a=0;a<l.c.length;a++)e[l.current[a]]=l.other[a];if(c)break}if(u===s.length)return!1}},permute_next:function(t){for(var i,s,e=1;e<t.c.length;){if(t.c[e]<e)return i=e%2&&t.c[e],s=t.current[e],t.current[e]=t.current[i],t.current[i]=s,t.c[e]++,!0;t.c[e++]=0}for(e=0;e<t.c.length;e++)t.current[e]=t.input[e],t.c[e]=0;return!1},isConnectionsEqual:function(t,i){for(var s in this.connections){var e=this.connections[s],n=t.connections[i[s]];if(e.right.length!==n.right.length)return!1;for(var r=0;r<e.right.length;r++)if(n.right[r]!==i[e.right[r]])return!1;if(e.bottom.length!==n.bottom.length)return!1;for(r=0;r<e.bottom.length;r++)if(n.bottom[r]!==i[e.bottom[r]])return!1}return!0},encodeBits:function(){if(null!==this.serialized)return this.serialized;for(var t="",i=this.bits.length,s=0;s<i-1;s+=2){var e=3&this.bits[s];t+=(e|=(3&this.bits[s+1])<<2).toString(16)}return this.serialized=t},decodeBits:function(t){for(var i=this.bits.length,s=0;s<i-1;s+=2){var e=parseInt(t[s/2],16);this.bits[s]=3&e,this.bits[s+1]=(12&e)>>2}this.invalidate()}},"CurveDataOperation:Operation":{type:"curvedata",setData:function(t,i){var s=t.board.shapes[t.qnum];if(s?(this.oldw=s.w,this.oldh=s.bits.length/s.w,this.oldbits=s.encodeBits()):this.oldqnum=t.qnum,i&&"object"==typeof i)0<i.bits.length?(this.neww=i.w,this.newh=i.bits.length/i.w,this.newbits=i.encodeBits()):this.newqnum=-1;else if("number"==typeof i&&i<0)this.newqnum=i;else{if(i||0===i)throw Error("Can only set shapes or negative qnum values");this.newqnum=-1}this.x=t.bx,this.y=t.by,this.isvalid=this.oldw!==this.neww||this.oldh!==this.newh||this.oldbits!==this.newbits||this.oldqnum!==this.newqnum},decode:function(t){var i=0;return"DC"===t[i++]&&(this.x=+t[i++],this.y=+t[i++],this.neww=+t[i++],this.newh=+t[i++],this.newbits=t[i++],this.newqnum=+t[i++],this.oldw=+t[i++],this.oldh=+t[i++],this.oldbits=t[+i],this.oldqnum=+t[10],!0)},toString:function(){return["DC",this.x,this.y,this.neww,this.newh,this.newbits,this.newqnum,this.oldw,this.oldh,this.oldbits,this.oldqnum].join(",")},undo:function(){this.oldqnum?this.execNum(this.oldqnum):this.execShape(this.oldw,this.oldh,this.oldbits)},redo:function(){this.newqnum?this.execNum(this.newqnum):this.execShape(this.neww,this.newh,this.newbits)},execShape:function(t,i,s){for(var e=new this.klass.CurveData,n=(e.init(t,i),e.decodeBits(s),this.board.shapes.length),r=0;r<n;r++)if(this.board.shapes[r].deepEquals(e))return this.execNum(r);return this.board.shapes.push(e),this.execNum(n)},execNum:function(t){var i=this.board.getc(this.x,this.y);i.qnum=t,i.path&&this.board.linegraph.scanForClues(i.path),i.draw()}},"SlideOperation:Operation":{setData:function(t,i){this.dir=t,this.x=i.bx,this.y=i.by},toString:function(){return["DS",this.dir,this.x,this.y].join(",")},decode:function(t){return"DS"===t[0]&&(this.dir=t[1],this.x=+t[2],this.y=+t[3],!0)},slide:function(t,i,s){var e,i=this.board.getc(i,s).path,n={R:2,L:-2}[t]||0,r={D:2,U:-2}[t]||0,o=new Set,h=(i.nodes.forEach(function(t){for(var i in t.obj.adjborder){i=t.obj.adjborder[i];!i.isnull&&i.line&&o.add(i.id)}}),Array.from(o));for(e in h.sort("R"===t||"D"===t?function(t,i){return i-t}:function(t,i){return t-i}),h){var a=this.board.border[h[e]],u=this.board.getb(a.bx+n,a.by+r);a.line=0,u.line=1,this.board.modifyInfo(a,"border.line"),a.draw(),this.board.modifyInfo(u,"border.line"),u.draw()}},undo:function(){switch(this.dir){case"L":return this.slide("R",this.x-2,this.y);case"R":return this.slide("L",this.x+2,this.y);case"U":return this.slide("D",this.x,this.y-2);case"D":return this.slide("U",this.x,this.y+2)}},redo:function(){return this.slide(this.dir,this.x,this.y)},isvalid:function(){var t=this.board.getc(this.x,this.y).path;if(!t)return!1;for(var i={U:"top",D:"bottom",L:"left",R:"right"}[this.dir],s=0;s<t.clist.length;s++){var e=t.clist[s].adjacent[i];if(!e||e.isnull||e.path&&e.path!==t)return!1}return!0}},OperationManager:{addExtraOperation:function(){this.operationlist.push(this.klass.CurveDataOperation),this.operationlist.push(this.klass.SlideOperation)}},Cell:{minnum:0,maxnum:function(){return this.board.shapes.length-1},getBits:function(){var t,i=0,s={right:1,bottom:2,left:4,top:8};for(t in s)this.adjborder[t].isLine()&&(i|=s[t]);return i}},CellList:{toCurveData:function(){var t=this.getRectSize(),i=new this.klass.CurveData;i.init(t.cols,t.rows);for(var s=0;s<this.length;s++){var e=this[s],n=(e.by-t.y1)/2*t.cols+(e.bx-t.x1)/2;e.adjborder.right.isLine()&&(i.bits[n]|=1),e.adjborder.bottom.isLine()&&(i.bits[n]|=2)}return i}},LineGraph:{enabled:!0,makeClist:!0,invalidateClue:function(t){for(var i=0;i<this.components.length;i++){var s=this.components[i];s.isomorphicWith===t&&(s.isomorphicWith=null)}},scanForClues:function(t){t.cluecnt=0,t.clueid=null;for(var i=0;i<t.nodes.length;i++){var s=t.nodes[i].obj;if(-1!==s.qnum){if(0!==t.cluecnt)return t.cluecnt=2,void(t.clueid=null);t.cluecnt=1,t.clueid=s.qnum}}},setExtraData:function(t){this.common.setExtraData.call(this,t),t.isomorphicWith=null,t.shape=null,this.scanForClues(t)}},"Graphic@curvedata":{irowake:!0,gridcolor_type:"LIGHT",paint:function(){this.drawBGCells(),this.drawDashedGrid(),this.drawPekes(),this.drawLines(),this.drawCellShapes(),this.drawHatenas(),this.drawBorders(),this.drawChassis(),this.drawTarget()},drawCellShapes:function(){for(var t=this.vinc("cell_shape","auto"),i=this.range.cells,s=0;s<i.length;s++){var e=i[s];if(0<=e.qnum){var n=this.board.shapes[e.qnum];if(n&&n.bits.length){var r=n.w,o=n.bits.length/r,h=1.3*Math.min(this.bw/(r-1),this.bh/(o-1)),a=Math.min(this.lw/2,h/4),u=a/2,l=(t.lineWidth=a,e.bx*this.bw-h*(r-1)/2),c=e.by*this.bh-h*(o-1)/2;t.strokeStyle="black",t.vid="c_shape_"+e.id,t.beginPath();for(var d=0;d<o;d++)for(var p=0;p<r-1;p++)1&n.bits[d*r+p]&&(t.moveTo(l+p*h-u,c+d*h),t.lineTo(l+(p+1)*h+u,c+d*h));for(d=0;d<o-1;d++)for(p=0;p<r;p++)2&n.bits[d*r+p]&&(t.moveTo(l+p*h,c+d*h-u),t.lineTo(l+p*h,c+(d+1)*h+u));t.closePath(),t.stroke()}}else t.vid="c_shape_"+e.id,t.vhide()}},getBorderColor:function(t){return 1===t.ques||-3===t.sidecell[0].qnum||-3===t.sidecell[1].qnum?this.quescolor:null},getBGCellColor:function(t){return-3===t.qnum?this.quescolor:t.error?this.errbcolor1:null}},"Graphic@curvedata-aux":{gridcolor_type:"LIGHT",linecolor:"black",paint:function(){this.drawBGCells(),this.drawDashedGrid(),this.drawLines(),this.drawChassis()}},BoardExec:{adjustBoardData:function(t,i){if(t&this.TURNFLIP){for(var s=this.getTranslateBits(t),e=this.board.shapes.length,n=0;n<e;n++){for(var r=this.board.shapes[n],o=r.w,h=r.bits.length,a=h/o,u=(r.buildBits(),Array(h)),l=0;l<h;l++){var c=r.bits[l];c in s&&(c=s[c]),u[this.getTranslatePosition(t,o,a,l)]=c}if(t&this.TURN){r.w=a;for(var d=0;d<a;d++)for(var p=0;p<o;p++)r.bits[p*a+d]=u[d*o+p]}else r.bits=u;r.invalidate()}t===this.TURNR?this.adjustBoardData(this.FLIPX,i):t===this.TURNL&&this.adjustBoardData(this.FLIPY,i)}},getTranslatePosition:function(t,i,s,e){var n=Math.floor(e%i),r=Math.floor(e/i);switch(t){case this.FLIPY:return(s-(r+1))*i+n;case this.FLIPX:return r*i+(i-(n+1));default:return e}},getTranslateBits:function(t){var i={};switch(t){case this.FLIPY:i={2:8,3:9,6:12,7:13,8:2,9:3,12:6,13:7};break;case this.FLIPX:i={1:4,3:6,9:12,11:14,4:1,6:3,12:9,14:11};break;case this.TURNR:case this.TURNL:i={1:2,2:1,4:8,5:10,6:9,7:11,8:4,9:6,10:5,11:7,13:14,14:13}}return i}},"Encode@curvedata":{decodePzpr:function(t){this.decodeClues();var i=this.outbstr.substr(1).split("/"),s=0,e=(i[s]&&"b"===i[s][0]&&(this.outbstr=i[s++].substr(1),this.decodeBorder()),Math.floor(i.length/3));this.board.shapes=Array(e);for(var n=0;n<e;n++){var r=new this.klass.CurveData,o=+i[s++],h=+i[s++],a=i[s++];if(!o||!h)break;r.init(o,h),r.decodeBits(a),this.board.shapes[n]=r}},decodeClues:function(){for(var t=0,i=0,s=this.outbstr,e=this.board,i=0;i<s.length;i++){var n=e.cell[t],r=s.charAt(i);if(this.include(r,"0","9")||this.include(r,"a","f")?n.qnum=parseInt(r,16):"-"===r?(n.qnum=parseInt(s.substr(i+1,2),16),i+=2):"+"===r?(n.qnum=parseInt(s.substr(i+1,3),16),i+=3):"."===r?n.qnum=-2:"="===r?n.qnum=-3:"g"<=r&&r<="z"&&(t+=parseInt(r,36)-16),t++,!e.cell[t])break}this.outbstr=s.substr(i+1)},encodePzpr:function(t){this.board.compressShapes();for(var i=this.board.shapes.length,s=(this.encodeClues(),this.board.border.some(function(t){return 1===t.ques})&&(this.outbstr+="b",this.encodeBorder(),this.outbstr+="/"),[]),e=0;e<i;e++){var n=this.board.shapes[e],r=n.w,o=n.bits.length/r;s.push(r),s.push(o),s.push(n.encodeBits())}this.outbstr+=s.join("/")},encodeClues:function(){for(var t=0,i="",s=this.board,e=0;e<s.cell.length;e++){var n="",r=s.cell[e].qnum;-2===r?n=".":-3===r?n="=":0<=r&&r<16?n=r.toString(16):16<=r&&r<256?n="-"+r.toString(16):256<=r&&r<4096?n="+"+r.toString(16):t++,0===t?i+=n:!n&&20!==t||(i+=(15+t).toString(36)+n,t=0)}0<t&&(i+=(15+t).toString(36)),this.outbstr+=i+"/"}},"Encode@curvedata-aux":{decodePzpr:function(t){var i=this.outbstr.split("/"),s=new this.klass.CurveData;s.init(+i[0],+i[1]),s.decodeBits(i[2]),this.board.setShape(s)},encodePzpr:function(t){var i=this.board.getShape(),s=[];s.push(i.w),s.push(i.w?i.bits.length/i.w:0),s.push(i.encodeBits()),this.outbstr+=s.join("/")}},"FileIO@curvedata":{decodeData:function(){var t=+this.readLine();this.decodeCell(function(t,i){"."!==i&&(t.qnum=+i)}),this.board.shapes=Array(t);for(var i=0;i<t;i++){var s=new this.klass.CurveData,e=+this.readLine(),n=+this.readLine();if(s.init(e,n),1<e)for(var r,o,h=this.getItemList(n),a=0;a<h.length;a++)"1"===h[a]&&(r=Math.floor(a%(e-1)),o=Math.floor(a/(e-1)),s.bits[o*e+r]|=1);if(1<n)for(var u=this.getItemList(n-1),a=0;a<u.length;a++)"1"===u[a]&&(s.bits[a]|=2);this.board.shapes[i]=s}this.decodeBorder(function(t,i){"-2"===i?t.ques=1:"-1"===i?t.qsub=2:0<+i&&(t.line=+i)})},encodeData:function(){this.board.compressShapes();var t=this.board.shapes.length;this.writeLine(t),this.encodeCell(function(t){return-1===t.qnum?". ":t.qnum+" "});for(var i=0;i<t;i++){var s=this.board.shapes[i],e=s.w,n=s.bits.length/e;if(this.writeLine(e),this.writeLine(n),1<e)for(var r=0;r<n;r++){for(var o="",h=0;h<e-1;h++)o+=1&s.bits[r*e+h]?"1 ":"0 ";this.writeLine(o)}for(r=0;r<n-1;r++){for(o="",h=0;h<e;h++)o+=2&s.bits[r*e+h]?"1 ":"0 ";this.writeLine(o)}}this.encodeBorder(function(t){return 1===t.ques?"-2 ":0<t.line?t.line+" ":2===t.qsub?"-1 ":"0 "})}},"FileIO@curvedata-aux":{decodeData:function(){var t=new this.klass.CurveData,i=+this.readLine(),s=+this.readLine();t.init(i,s),t.decodeBits(this.readLine()),this.board.setShape(t)},encodeData:function(){var t=this.board.getShape();this.writeLine(t.w||0),this.writeLine(t.w?t.bits.length/t.w:0),t.w&&this.writeLine(t.encodeBits())}},"AnsCheck@curvedata":{checklist:["checkMultipleClues","checkShapes","checkNoClues","checkNoLine++"],checkNoClues:function(){return this.curvedata_shapecount(0,"shNone")},checkMultipleClues:function(){return this.curvedata_shapecount(2,"shMultiple")},checkNoLine:function(){this.checkAllCell(function(t){return-3!==t.qnum&&0===t.lcnt},"ceNoLine")},curvedata_shapecount:function(t,i){for(var s=this.board.linegraph.components,e=!1,n=0;n<s.length;n++){var r=s[n];if(r.cluecnt===t){if(this.failcode.add(i),this.checkOnly)return;e||(this.board.border.setnoerr(),e=!0),r.setedgeerr(1)}}},checkShapes:function(){for(var t=this.board.linegraph.components,i=!1,s=0;s<t.length;s++){var e=t[s];if(null!==e.clueid&&-2!==e.clueid&&!this.shapeMatches(e)){if(this.failcode.add("shIncorrect"),this.checkOnly)return;i||(this.board.border.setnoerr(),i=!0),e.setedgeerr(1)}}},shapeMatches:function(t){t.shape||(t.shape=t.clist.toCurveData());var i=t.shape;if(t.isomorphicWith===t.clueid)return!0;var s=this.board.shapes[t.clueid];return!!i.isIsomorphic(s)&&(t.isomorphicWith=t.clueid,!0)}}});
//# sourceMappingURL=curvedata.js.map