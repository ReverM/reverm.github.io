/*! @license pzpr.js v7f9addbe (c) 2009-2025 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */
ui.debug.addRules("turnrun",[{rules:"Draw lines through orthogonally adjacent cells to form a directional loop.\n1. The loop cannot branch off or overlap.\n2. All cells where the loop crosses itself are given. The loop cannot cross itself in other places.\n3. The loop must visit and make a turn in every cell with a number.\n4. When the loop exits a cell with a number, it must travel in a straight line for the indicated number of cells, and then turn.",history:'This genre was invented as "Totsugeki Loop" by Subaru Saito in 2018. A similar ruleset named "Turn and Run" appeared in a Logic Masters Deutschland competition in 2021.'},{rules:"",history:""}]),ui.debug.addDebugData("turnrun",{url:"5/5/g2o0h1k4j",failcheck:[["lnBranch","pzprv3/turnrun/5/5/. 2 . . . /. . . . . /. 0 . . 1 /. . . . . /4 . . . . /0 0 0 0 /0 0 0 0 /0 0 0 0 /1 0 0 0 /0 0 0 0 /0 0 0 0 0 /0 0 0 0 0 /1 0 0 0 0 /1 0 0 0 0 /"],["lnCrossExMk","pzprv3/turnrun/5/5/. 2 . . . /. . . . . /. 0 . . 1 /. . . . . /4 . . . . /0 1 1 0 /0 0 1 1 /0 0 0 0 /0 0 0 0 /0 0 0 0 /0 0 0 1 0 /0 0 0 1 0 /0 0 0 0 0 /0 0 0 0 0 /"],["lnStraightOnNum","pzprv3/turnrun/5/5/. 2 . . . /. . . . . /. 0 . . 1 /. . . . . /4 . . . . /1 1 0 0 /1 0 0 1 /1 1 0 0 /0 1 1 0 /1 1 1 1 /1 0 1 0 0 /0 1 1 1 1 /1 1 0 1 1 /1 0 0 0 1 /"],["ceDirection","pzprv3/turnrun/5/5/. 2 . . . /. . . . . /. 0 . . 1 /. . . . . /4 . . . . /0 1r 1r 1r /0 0 1 1 /1 1 0 1 /0 1 1 0 /1 1 1 1 /0 1 0 0 1 /0 1 1 0 0 /1 1 0 1 1 /1 0 0 0 1 /"],["lnNotCrossMk","pzprv3/turnrun/5/5/. 2 . . . /. . . . . /. 0 . . 1 /. . . . . /4 . . . . /0 1 1 0 /1 0 0 0 /0 0 0 1 /0 0 0 1 /1 1 1 0 /0 1 0 1 0 /1 0 0 1 0 /1 0 0 0 1 /1 0 0 1 0 /"],["lnPlLoop","pzprv3/turnrun/5/5/. 2 . . . /. . . . . /. 0 . . 1 /. . . . . /4 . . . . /0 1 1 0 /0 0 1 0 /1 1 0 1 /0 0 0 1 /1 0 0 0 /0 1 0 1 0 /0 1 1 0 0 /1 1 0 1 1 /1 1 0 0 0 /:"],["numNoLine","pzprv3/turnrun/5/5/. 2 . . . /. . . . . /. 0 . . 1 /. . . . . /4 . . . . /0 1 1 0 /0 0 1 0 /1 1 0 0 /0 1 1 1 /1 1 1 1 /0 1 0 1 0 /0 1 1 0 0 /1 1 0 0 0 /1 0 0 0 1 /"],["lnDeadEnd","pzprv3/turnrun/5/5/. 2 . . . /. . . . . /. 0 . . 1 /. . . . . /4 . . . . /0 1 1 0 /0 0 0 0 /1 1 0 1 /0 1 1 0 /1 1 1 1 /0 1 0 1 0 /0 1 0 0 0 /1 1 0 1 1 /1 0 0 0 1 /"],["ceNoLine","pzprv3/turnrun/3/3/f/. . 2 /. . . /. . . /1 1 /1 0 /0 1 /1 0 1 /0 1 1 /",{skiprules:!0}],[null,"pzprv3/turnrun/3/3/f/. . 2 /. . . /# . . /1 1 /1 0 /0 1 /1 0 1 /0 1 1 /",{skiprules:!0}],[null,"pzprv3/turnrun/5/5/. 2 . . . /. . . . . /. 0 . . 1 /. . . . . /4 . . . . /0 1r 1r 0 /0 0 1 0 /1 1 0 1l /0 1 1 0 /1r 1r 1r 1r /0 1 0 1 0 /0 1 1 0 0 /1 1 0 1 1 /1 0 0 0 1 /"]],inputs:[]});
//# sourceMappingURL=turnrun.js.map