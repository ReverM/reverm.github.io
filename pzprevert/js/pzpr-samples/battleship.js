/*! @license pzpr.js v7f9addbe (c) 2009-2025 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */
ui.debug.addRules("battleship",[{rules:"Place every ship from the fleet into the grid. Ships can be rotated or mirrored.\n1. All ships must be used exactly once. There cannot be ships in the grid that aren't present in the bank.\n2. Two ships cannot be orthogonally or diagonally adjacent.\n3. Numbers outside the grid indicate how many cells in the row or column are occupied by ships.\n4. Some ship segments are given (corner pieces, centers, or single-length boats), along with their orientation. Gray cells represent ship segments of unknown shape.\n5. Cells marked with water cannot be used by ships.",history:""},{rules:"1.盤面のマスに沿って指定された艦をすべて配置します。\n2.異なる艦の入ったマスはタテヨコナナメに接しません。\n3.盤面の外の数字は、その列で艦の入るマスの数を表します。\n4.艦の一部があらかじめ示されていることがあります。灰色マスは、向きや位置は不明ですが、艦の一部になります。\n5.波のマス上に艦が重なることはありません。",history:""}]),ui.debug.addDebugData("battleship",{url:"6/6/g12h2g30g3gk0r3w//c",failcheck:[["csPieceExtra","pzprv3/battleship/6/6/c/. . 1 2 . . 2 /. . . . . . 0 /3 . . . . . . /0 . . . . . . /. 3 . . . . . /3 . . . . . . /. . . . . . . /. . . . . . /. . . . . . /+ + . . . . /. + . . . . /# + . . . . /# + . . . . /0 0 0 0 0 0 /"],["csMismatch","pzprv3/battleship/6/6/c/. . 1 2 . . 2 /. . . . . . 0 /3 . . . . . . /0 . . . . . . /. 3 . . . . . /3 . . . . . . /. . . . . . . /# + # + + + /# + # + + # /+ + + + + + /. . . + + + /. + + # # # /+ # + + + + /0 0 0 0 0 0 /"],["bankGt","pzprv3/battleship/6/6/c/. . 1 2 . . 2 /. . . . . . 0 /3 . . . . . . /0 . . . . . . /. 3 . . . . . /3 . . . . . . /. . . . . . . /# + # + + + /# + # + + # /+ + + + + + /. # + + + + /+ + + # # # /# + + + + + /0 0 0 0 0 0 /"],["bankInvalid","pzprv3/battleship/6/6/c/. . 1 2 . . 2 /. . . . . . 0 /3 . . . . . . /0 . . . . . . /. 3 . . . . . /3 . . . . . . /. . . . . . . /. . . . . . /. + + + . . /+ + # + . . /+ # # + . . /+ + + + . . /. . . . . . /0 0 0 0 0 0 /"],["shDiag","pzprv3/battleship/6/6/c/. . 1 2 . . 2 /. . . . . . 0 /3 . . . . . . /0 . . . . . . /. 3 . . . . . /3 . . . . . . /. . . . . . . /# + + + + + /+ + + # # # /+ + + + + + /. # + + + + /+ + # + # # /# + + + + + /0 0 0 0 0 0 /"],["bankLt","pzprv3/battleship/6/6/c/. . 1 2 . . 2 /. . . . . . 0 /3 . . . . . . /0 . . . . . . /. 3 . . . . . /3 . . . . . . /. . . . . . . /+ + # + + + /# + # + + # /+ + + + + + /+ # + + + + /+ + + # # # /. . + + + + /1 1 0 1 1 1 /"],["exShadeNe","pzprv3/battleship/6/6/c/. . 1 2 . . 2 /. . . . . . 0 /3 . . . . . . /0 . . . . . . /. 3 . . . . . /3 . . . . . . /. . . . . . . /# + # + + + /+ + # + + # /+ + + + + + /. # + + + + /+ + + # # # /# + + + + + /0 0 0 0 0 0 /"],[null,"pzprv3/battleship/6/6/c/. . 1 2 . . 2 /. . . . . . 0 /3 . . . . . . /0 . . . . . . /. 3 . . . . . /3 . . . . . . /. . . . . . . /+ + # + + + /# + # + + # /+ + + + + + /+ # + + + + /+ + + # # # /# + + + + + /0 0 0 0 0 0 /"]],inputs:[{label:"Keyboard inputs",input:["newboard,4,1,p","cursor,-1,1","key,1,right,2,right,a,right,1,0,right,a,BS","mouse,left,-1,1"],result:"pzprv3/battleship/1/4/p/. . . . . /1 2 10 0 . /. . . . /0 0 0 0 0 0 0 0 0 0 0 0 /"},{label:"Mouse input",input:["cursor,-1,1","mouse,left,-1,1","playmode","mouse,left,-1,1"],result:"pzprv3/battleship/1/4/p/. . . . . /c2 2 10 0 . /. . . . /0 0 0 0 0 0 0 0 0 0 0 0 /"},{label:"Copy answer",input:["newboard,4,1,d","playmode","mouse,left,1,1,5,1","editmode","cursor,7,1","mouse,leftx2,1,1","mouse,leftx2,3,1"],result:"pzprv3/battleship/1/4/d/. . . . . /. 3 5 . . /. . # . /0 0 0 0 0 0 0 0 0 0 /"}]});
//# sourceMappingURL=battleship.js.map