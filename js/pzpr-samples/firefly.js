/*! @license pzpr.js v7f9addbe (c) 2009-2025 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */
ui.debug.addRules("firefly",[{rules:"Draw a line from every firefly to make one connected network.\n1. A black dot indicates where each firefly's path must start.\n2. A path cannot connect directly between two black dots.\n3. Paths cannot branch, cross or go through another path or firefly.\n4. A number indicates how many turns the firefly's path makes before reaching a firefly (possibly itself). Paths starting from empty circles can make any amount of turns.",history:"This genre first appeared in Puzzle Communication Nikoli vol. 91."},{rules:"1. すべての白丸の黒点から点線上に線をのばして白丸につなげます。\n2. 黒点同士が線で直接つながったり、白丸の黒点でない部分同士が線で直接つながってはいけません。\n 3. どの線も白丸以外のところで、途切れたり交差したり枝分かれしたりしてはいけません。また、線で全体がひとつながりにならなければいけません。\n4. 数字は、その白丸の黒点から出る線が白丸につながるまでに曲がる回数を表します。",history:"パズル通信ニコリ vol.91より"}]),ui.debug.addDebugData("firefly",{url:"5/5/40c21a3.a30g10a22a11c11",failcheck:[["brNoLine","pzprv3/firefly/5/5"],["lnBranch","pzprv3/firefly/5/5/4,0 . . . 2,1 /. 3,- . 3,0 . /. . . . . /. 1,0 . 2,2 . /1,1 . . . 1,1 /1 1 1 0 /0 0 0 0 /0 0 0 0 /0 0 0 0 /0 0 0 0 /0 0 1 0 0 /0 0 1 0 0 /0 0 1 0 0 /0 0 0 0 0 /"],["lnCross","pzprv3/firefly/5/5/4,0 . . . 2,1 /. 3,- . 3,0 . /. . . . . /. 1,0 . 2,2 . /1,1 . . . 1,1 /1 1 0 0 /0 0 0 0 /0 1 1 0 /0 0 0 0 /0 0 0 0 /0 0 1 0 0 /0 0 1 1 0 /0 1 1 0 0 /0 0 0 0 0 /"],["lcInvDirB","pzprv3/firefly/5/5/4,0 . . . 2,1 /. 3,- . 3,0 . /. . . . . /. 1,0 . 2,2 . /1,1 . . . 1,1 /1 0 0 0 /0 0 1 0 /0 1 0 0 /0 0 0 0 /0 0 0 0 /0 0 0 0 0 /0 0 1 0 0 /0 1 0 0 0 /0 0 0 0 0 /"],["lcCurveNe","pzprv3/firefly/5/5/4,0 . . . 2,1 /. 3,- . 3,0 . /. . . . . /. 1,0 . 2,2 . /1,1 . . . 1,1 /1 1 1 1 /0 1 0 0 /0 1 0 0 /0 0 0 0 /0 0 0 0 /0 0 0 0 0 /0 0 1 0 0 /0 1 0 0 0 /0 0 0 0 0 /"],["lcDeadEnd","pzprv3/firefly/5/5/4,0 . . . 2,1 /. 3,- . 3,0 . /. . . . . /. 1,0 . 2,2 . /1,1 . . . 1,1 /1 1 1 1 /0 0 0 0 /0 1 0 0 /0 0 0 0 /0 0 0 0 /0 0 0 0 0 /0 0 1 0 0 /0 1 0 0 0 /0 0 0 0 0 /"],["lcDivided","pzprv3/firefly/5/5/4,0 . . . 2,1 /. 3,- . 3,0 . /. . . . . /. 1,0 . 2,2 . /1,1 . . . 1,1 /1 1 1 1 /1 1 1 1 /0 0 0 0 /1 0 0 1 /0 1 1 0 /1 0 0 0 1 /0 0 0 0 0 /0 0 0 0 0 /1 1 0 1 1 /"],["lcDeadEnd","pzprv3/firefly/5/5/4,0 . . . 2,1 /. 3,- . 3,0 . /. . . . . /. 1,0 . 2,2 . /1,1 . . . 1,1 /1 1 1 1 /1 1 1 1 /0 0 0 0 /1 0 0 1 /0 1 1 0 /1 0 0 0 1 /0 0 0 0 0 /0 1 0 0 0 /1 1 0 1 1 /"],["nmNoLine","pzprv3/firefly/5/5/4,0 . . . 2,1 /. 3,- . 3,0 . /. . . . . /. 1,0 . 2,2 . /1,1 . . . 1,1 /1 1 1 1 /1 1 1 1 /0 0 0 0 /0 0 0 1 /0 1 1 0 /1 0 0 0 1 /0 1 0 0 0 /0 1 0 0 0 /0 1 0 1 1 /"],["lcInvDirW","pzprv3/firefly/5/5/4,0 . . . 2,1 /. 3,- . 3,0 . /. . . . . /. 1,0 . 2,2 . /1,1 . . . 1,1 /1 1 1 1 /1 1 1 1 /0 0 0 0 /1 0 0 1 /0 1 1 0 /1 0 0 0 1 /0 1 0 1 0 /0 1 0 1 0 /1 1 0 1 1 /"],[null,"pzprv3/firefly/5/5/4,0 . . . 2,1 /. 3,- . 3,0 . /. . . . . /. 1,0 . 2,2 . /1,1 . . . 1,1 /1 1 1 1 /1 1 1 1 /-1 -1 -1 -1 /1 0 0 1 /0 1 1 0 /1 -1 -1 -1 1 /0 1 0 0 -1 /0 1 0 0 -1 /1 1 0 1 1 /"]],inputs:[{input:["newboard,5,2","playmode"]},{input:["mouse,left, 1,1, 7,1","mouse,left, 3,3, 9,3","mouse,left, 5,1, 5,3","mouse,right, 6,3, 5,2"],result:"pzprv3/firefly/2/5/. . . . . /. . . . . /1 1 1 0 /0 1 -1 1 /0 0 -1 0 0 /"},{input:["mouse,left, 5,1, 5,3, 7,3"],result:"pzprv3/firefly/2/5/. . . . . /. . . . . /1 1 1 0 /0 1 1 1 /0 0 1 0 0 /"},{input:["editmode","newboard,5,1"]},{input:["cursor,1,1","key,-,shift+up","key,right","key,0,shift+down","key,right","key,1,shift+left","key,right","key,2,shift+right","key,right","key,1,0"],result:"pzprv3/firefly/1/5/1,- 2,0 3,1 4,2 0,10 /0 0 0 0 /"},{input:["cursor,1,1","key,-","key,right","key,-","key,right","key,-,-","key,right","key,shift+right"],result:"pzprv3/firefly/1/5/. 2,- . 0,2 0,10 /0 0 0 0 /"},{input:["newboard,6,1"]},{input:["cursor,0,0","mouse,leftx2, 1,1","mouse,left, 1,1, 1,-1","mouse,leftx3, 3,1","mouse,left, 3,1, 3,3","mouse,leftx4, 5,1","mouse,left, 5,1, 3,1","mouse,leftx5, 7,1","mouse,left, 7,1, 9,1","mouse,leftx6, 9,1","mouse,rightx2, 11,1"],result:"pzprv3/firefly/1/6/1,- 2,0 3,1 4,2 0,3 0,999 /0 0 0 0 0 /"}]});
//# sourceMappingURL=firefly.js.map