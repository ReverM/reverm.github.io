/*! @license pzpr.js v7f9addbe (c) 2009-2025 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */
ui.debug.addRules("angleloop",[{rules:"Draw lines between every symbol to form a loop.\n1. Lines go straight from symbol to symbol, and can be drawn at any angle.\n2. The loop can not branch off or intersect. Symbols must be visited exactly once.\n3. The lines visiting a Triangle must meet at an acute angle (between 0° exclusive and 90° exclusive)\n 4. The lines visiting a Square must meet at a right angle (exactly 90°)\n5. The lines visiting a Pentagon must meet at an obtuse angle (between 90° exclusive and 180° exclusive)",history:""},{rules:"1. 盤面上のマークを直線でつなぎ、すべてのマークを1回ずつ通るひとつのループを作ります。ループが枝分かれしたり、交差したりしてはいけません。\n 2. ループの線は、マークの上でのみ曲がります。そのマークから出る2本の直線の角度が、三角形(▲)では鋭角(0度より大きく、90度より小さい)、四角形(▨)では直角(ちょうど90度)、五角形(⬠)では鈍角(90度より大きく、180度より小さい)になるようにします。",history:""}]),ui.debug.addDebugData("angleloop",{url:"5/5/1a1ab6b0c1c0a4c3a1a",failcheck:[["lnPassOver","pzprv3/angleloop/5/5/. . 1 . . 1 /2 . . . . . /. . 2 . 3 . /. 3 . 1 . . /. . . 3 . . /. . 1 . . 1 /4/0 2 4 0/0 2 2 6/4 0 4 4/4 4 10 10/"],["lnIsolate","pzprv3/angleloop/5/5/. . 1 . . 1 /2 . . . . . /. . 2 . 3 . /. 3 . 1 . . /. . . 3 . . /. . 1 . . 1 /3/0 2 4 0/0 2 2 6/4 0 8 2/"],["lnDeadEnd","pzprv3/angleloop/5/5/. . 1 . . 1 /2 . . . . . /. . 2 . 3 . /. 3 . 1 . . /. . . 3 . . /. . 1 . . 1 /3/0 2 4 0/0 2 2 6/4 0 4 4/"],["lnCross","pzprv3/angleloop/5/5/. . 1 . . 1 /2 . . . . . /. . 2 . 3 . /. 3 . 1 . . /. . . 3 . . /. . 1 . . 1 /10/0 2 4 4/0 2 4 0/2 6 4 0/2 6 4 10/4 10 6 8/6 8 10 10/6 6 10 10/6 6 8 4/8 4 10 0/4 4 10 0/"],["nmLineLt2","pzprv3/angleloop/5/5/. . 1 . . 1 /2 . . . . . /. . 2 . 3 . /. 3 . 1 . . /. . . 3 . . /. . 1 . . 1 /4/0 2 4 0/0 2 2 6/4 0 6 6/2 6 6 6/"],["lnBranch","pzprv3/angleloop/5/5/. . 1 . . 1 /2 . . . . . /. . 2 . 3 . /. 3 . 1 . . /. . . 3 . . /. . 1 . . 1 /6/0 2 2 6/0 2 4 0/4 4 8 4/4 0 4 4/8 4 10 0/8 4 10 10/"],["lnPlLoop","pzprv3/angleloop/5/5/. . 1 . . 1 /2 . . . . . /. . 2 . 3 . /. 3 . 1 . . /. . . 3 . . /. . 1 . . 1 /7/0 2 4 0/0 2 2 6/4 0 6 6/2 6 6 6/8 4 10 0/8 4 10 10/10 0 10 10/"],["lnWrongAngle","pzprv3/angleloop/5/5/. . 1 . . 1 /2 . . . . . /. . 2 . 3 . /. 3 . 1 . . /. . . 3 . . /. . 1 . . 1 /10/0 2 2 6/0 2 4 0/4 0 4 4/4 4 8 4/8 4 10 0/10 0 10 10/2 6 4 10/4 10 6 6/6 6 6 8/6 8 10 10/"],["lnWrongAngle","pzprv3/angleloop/5/5/. . 1 . . 1 /2 . . . . . /. . 2 . 3 . /. 3 . 1 . . /. . . 3 . . /. . 1 . . 1 /10/0 2 2 6/0 2 4 0/4 0 4 4/4 4 8 4/8 4 10 0/10 0 10 10/2 6 6 6/6 6 6 8/4 10 6 8/4 10 10 10/"],["lnWrongAngle","pzprv3/angleloop/5/5/. . 1 . . 1 /2 . . . . . /. . 2 . 3 . /. 3 . 1 . . /. . . 3 . . /. . 1 . . 1 /10/0 2 4 4/2 6 4 4/2 6 4 10/0 2 4 0/4 0 6 6/6 6 8 4/8 4 10 0/10 0 10 10/6 8 10 10/4 10 6 8/"],["lnWrongAngle","pzprv3/angleloop/5/5/. . 1 . . 1 /2 . . . . . /. . 2 . 3 . /. 3 . 1 . . /. . . 3 . . /. . 1 . . 1 /10/0 2 2 6/0 2 4 0/10 0 10 10/4 0 8 4/8 4 10 0/2 6 4 4/4 4 6 6/6 8 10 10/4 10 6 8/4 10 6 6/"],[null,"pzprv3/angleloop/5/5/. . 1 . . 1 /2 . . . . . /. . 2 . 3 . /. 3 . 1 . . /. . . 3 . . /. . 1 . . 1 /10/0 2 4 0/0 2 2 6/4 0 4 4/4 4 8 4/8 4 10 0/10 0 10 10/6 8 10 10/4 10 6 8/4 10 6 6/2 6 6 6"]],inputs:[]});
//# sourceMappingURL=angleloop.js.map