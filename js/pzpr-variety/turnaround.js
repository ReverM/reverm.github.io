/*! @license pzpr.js v7f9addbe (c) 2009-2025 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */
!function(e,n){"object"==typeof module&&module.exports?module.exports=[e,n]:pzpr.classmgr.makeCustom(e,n)}(["turnaround"],{MouseEvent:{inputModes:{edit:["number","clear","info-line"],play:["line","peke","clear","info-line"]},autoedit_func:"qnum",autoplay_func:"line"},KeyEvent:{enablemake:!0},Cell:{minnum:0,maxnum:3,isCmp:function(){if(!this.puzzle.execConfig("autocmp")||!this.isNum())return!1;var e=this.countTurn();return this.qnum===e||-2===this.qnum&&0<=e},countTurn:function(){if(2!==this.lcnt)return-1;var e=this.getAdjCells();if(e.some(function(e){return 2!==e.lcnt}))return-1;e.add(this);var n=0;return e.each(function(e){n+=e.isLineCurve()?1:0}),n},getAdjCells:function(){var e,n=new this.klass.PieceList;for(e in this.adjborder)this.adjborder[e].isLine()&&n.add(this.adjacent[e]);return n}},Board:{hasborder:1},LineGraph:{enabled:!0},Graphic:{irowake:!0,qcmpcolor:"rgb(127,127,127)",autocmp:"number",getQuesNumberColor:function(e){var n=this.getQuesNumberColor_mixed(e);return 1!==(e.error||e.qinfo)&&e.isCmp()?this.qcmpcolor:n},setRange:function(e,n,i,t){var o=this.puzzle,r=o.board;o.execConfig("autocmp")&&(e=r.minbx-2,n=r.minby-2,i=r.maxbx+2,t=r.maxby+2),this.common.setRange.call(this,e,n,i,t)},paint:function(){this.drawBGCells(),this.drawShadedCells(),this.drawDashedGrid(),this.drawLines(),this.drawQuesNumbers(),this.drawPekes(),this.drawChassis(),this.drawTarget()}},Encode:{decodePzpr:function(e){this.decodeNumber16(),this.puzzle.setConfig("loop_full",this.checkpflag("f"))},encodePzpr:function(e){this.outpflag=this.puzzle.getConfig("loop_full")?"f":null,this.encodeNumber16()}},FileIO:{decodeData:function(){this.decodeConfigFlag("f","loop_full"),this.decodeCellQnum(),this.decodeBorderLine()},encodeData:function(){this.encodeConfigFlag("f","loop_full"),this.encodeCellQnum(),this.encodeBorderLine()}},AnsCheck:{checklist:["checkBranchLine","checkCrossLine","checkTurnCount","checkNoLineNumber","checkDeadendLine+","checkNoLineIfVariant","checkOneLoop"],checkTurnCount:function(){this.checkAllCell(function(e){if(!e.isValidNum())return!1;var n=e.countTurn();return-1!==n&&(n!==e.qnum&&(e.seterr(1),e.getAdjCells().seterr(1),!0))},"anTurn")},checkNoLineNumber:function(){this.checkAllCell(function(e){return e.isNum()&&0===e.lcnt},"numNoLine")}}});
//# sourceMappingURL=turnaround.js.map