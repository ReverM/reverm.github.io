/*! @license pzpr.js v7f9addbe (c) 2009-2025 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */
!function(e,i){"object"==typeof module&&module.exports?module.exports=[e,i]:pzpr.classmgr.makeCustom(e,i)}(["lither"],{MouseEvent:{inputModes:{edit:["number","clear","info-line"],play:["line","peke","bgcolor","bgcolor1","bgcolor2","clear","info-line"]},mouseinput_auto:function(){var e=this.puzzle;e.playmode?this.checkInputBGcolor()?this.inputBGcolor():"left"===this.btn?this.mousestart||this.mousemove?this.inputLine():this.mouseend&&this.notInputted()&&(this.prevPos.reset(),this.inputpeke()):"right"===this.btn&&(this.mousestart||this.mousemove)&&this.inputpeke():e.editmode&&this.mousestart&&this.inputqnum()},checkInputBGcolor:function(){var e=this.puzzle.execConfig("bgcolor");return e=e&&(this.mousestart?this.getpos(.25).oncell():!!this.mousemove&&10<=this.inputData)}},KeyEvent:{enablemake:!0},Cell:{maxnum:3,minnum:0,getdir4BorderLine1:function(){var e=this.adjborder,i=0;return e.top.isLine()&&i++,e.bottom.isLine()&&i++,e.left.isLine()&&i++,e.right.isLine()&&i++,i}},Board:{cols:6,rows:6,hasborder:2,borderAsLine:!0},LineGraph:{enabled:!0,makeClist:!0},Graphic:{irowake:!0,bgcellcolor_func:"qsub2",numbercolor_func:"qnum",margin:.5,paint:function(){this.drawBGCells(),this.drawLines(),this.drawBaseMarks(),this.drawCrossErrors(),this.drawQuesNumbers(),this.drawPekes(),this.drawTarget()},repaintParts:function(e){this.range.crosses=e.crossinside(),this.drawBaseMarks(),this.drawCrossErrors()}},Encode:{decodePzpr:function(e){this.decode4Cell()},encodePzpr:function(e){this.encode4Cell()}},FileIO:{decodeData:function(){1===this.filever?(this.decodeCellQnum(),this.decodeCellQsub(),this.decodeBorderLine()):0===this.filever&&(this.decodeCellQnum(),this.decodeBorderLine())},encodeData:function(){this.filever=1,this.encodeCellQnum(),this.encodeCellQsub(),this.encodeBorderLine()}},AnsCheck:{checklist:["checkLineExist+","checkNoLoop","checkPluralLine","checkAllBranchOrTerminate","checkdir4BorderLine+"],checkdir4BorderLine:function(){this.checkAllCell(function(e){return 0<=e.qnum&&e.getdir4BorderLine1()!==e.qnum},"nmLineNe")},checkAllBranchOrTerminate:function(){var e=!0,i=this.board;if(i.linegraph.ltotal[0]||i.linegraph.ltotal[2]){for(var t=i.cross,r=0;r<t.length;r++){var n=t[r];if(0===n.lcnt||2===n.lcnt){if(e=!1,this.checkOnly)break;i.border.setnoerr(),n.seterr(1),i.borderinside(n.bx-1,n.by-1,n.bx+1,n.by+1).seterr(1)}}e||this.failcode.add("lnNoBranchOrTerm")}},checkPluralLine:function(){var e=this.board;e.linegraph.components.length<2&&(this.failcode.add("lnSnLine"),e.border.seterr(1))},checkNoLoop:function(){for(var e=this.board,i=e.linegraph.components,t=0;t<i.length;t++)if(0!==i[t].circuits){if(this.failcode.add("lnHasLoop"),this.checkOnly)return;e.border.setnoerr(),this.searchloop(i[t],e.linegraph,!0).seterr(1)}}}});
//# sourceMappingURL=lither.js.map