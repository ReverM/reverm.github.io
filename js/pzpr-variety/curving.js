/*! @license pzpr.js v7f9addbe (c) 2009-2025 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */
!function(e,t){"object"==typeof module&&module.exports?module.exports=[e,t]:pzpr.classmgr.makeCustom(e,t)}(["curving"],{MouseEvent:{RBShadeCell:!0,use:!0,inputModes:{edit:["circle-unshade","info-blk","clear"],play:["shade","unshade","peke","info-blk"]},autoplay_func:"cellpeke",mouseinputAutoEdit:function(){this.inputFixedNumber(1)},inputFixedNumber:function(e){var t=this.getcell();if(!t.isnull&&t!==this.mouseCell){if(this.initFirstCell(t),1===this.inputData){var n=this.firstCell;if(2&(t.bx^t.by^n.bx^n.by))return}this.common.inputFixedNumber.call(this,e)}}},KeyEvent:{enablemake:!0},Cell:{maxnum:1,disInputHatena:!0,numberAsObject:!0,numberRemainsUnshaded:!0},Board:{hasborder:1,addExtraInfo:function(){this.horzStripes=this.addInfoList(this.klass.HorzStripeGraph),this.vertStripes=this.addInfoList(this.klass.VertStripeGraph)}},AreaUnshadeGraph:{enabled:!0},"StripeGraph:AreaUnshadeGraph":{relation:{"cell.qnum":"node","cell.qans":"node"},setExtraData:function(e){this.common.setExtraData.call(this,e),e.circles=e.clist.filter(function(e){return 1===e.qnum})}},"HorzStripeGraph:StripeGraph":{enabled:!0,getComponentRefs:function(e){return e.horzStripe},setComponentRefs:function(e,t){e.horzStripe=t},getObjNodeList:function(e){return e.horzNodes},resetObjNodeList:function(e){e.horzNodes=[]},isedgevalidbynodeobj:function(e,t){return e.by===t.by}},"VertStripeGraph:StripeGraph":{enabled:!0,getComponentRefs:function(e){return e.vertStripe},setComponentRefs:function(e,t){e.vertStripe=t},getObjNodeList:function(e){return e.vertNodes},resetObjNodeList:function(e){e.vertNodes=[]},isedgevalidbynodeobj:function(e,t){return e.bx===t.bx}},Graphic:{gridcolor_type:"LIGHT",paint:function(){this.drawBGCells(),this.drawGrid(),this.drawShadedCells(),this.drawDotCells(),this.drawCircles(),this.drawChassis(),this.drawPekes(),this.drawTarget()}},Encode:{decodePzpr:function(e){this.decodeBinary("qnum",1)},encodePzpr:function(e){this.encodeBinary("qnum",1)}},FileIO:{decodeData:function(){this.decodeCellQnum(),this.decodeCellAns(),this.decodeBorderLine()},encodeData:function(){this.encodeCellQnum(),this.encodeCellAns(),this.encodeBorderLineIfPresent()}},AnsCheck:{checklist:["checkAdjacentShadeCell","checkConnectUnshadeRB","checkZeroTurns","checkOneTurn","doneShadingDecided"],checkZeroTurns:function(){for(var e=this.board,t=e.horzStripes.components.concat(e.vertStripes.components),n=0;n<t.length;n++){var i=t[n];if(!(i.circles.length<2)){if(this.failcode.add("curvingNoTurns"),this.checkOnly)return;i=i.circles.getRectSize();e.cellinside(i.x1,i.y1,i.x2,i.y2).seterr(1)}}},checkOneTurn:function(){for(var e=this.board,t=0;t<e.cell.length;t++){var n=e.cell[t];if(!n.isShade()&&1!==n.qnum){var i=n.horzStripe,r=n.vertStripe;if(1===i.circles.length&&1===r.circles.length){if(this.failcode.add("curvingOneTurn"),this.checkOnly)return;var s=new this.klass.CellList([i.circles[0],r.circles[0]]),i=s.some(function(e){return 1===e.error});if(!i)for(var o=0;o<2;o++){var c=new this.klass.CellList([n]),c=(c.add(s[o]),c.getRectSize());e.cellinside(c.x1,c.y1,c.x2,c.y2).seterr(1)}}}}}}});
//# sourceMappingURL=curving.js.map